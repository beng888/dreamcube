[{"C:\\Users\\Admin\\Desktop\\shop\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\shop\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\index.js":"3","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Navbar\\Navbar.jsx":"4","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Navbar\\styles.js":"5","C:\\Users\\Admin\\Desktop\\shop\\src\\lib\\commerce.js":"6","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Cart\\Cart.jsx":"7","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"8","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\CheckoutForm\\Checkout\\styles.js":"9","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\CheckoutForm\\AddressForm.jsx":"10","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\CheckoutForm\\PaymentForm.jsx":"11","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\CheckoutForm\\CustomTextField.jsx":"12","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\CheckoutForm\\Review.jsx":"13","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\ProductDetails\\ProductDetails.jsx":"14","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Home\\Home.jsx":"15","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Home\\styles.js":"16","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Navbar\\NavDrawer.jsx":"17","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Navbar\\content.js":"18","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Navbar\\NavVideo.jsx":"19","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Category\\Category.jsx":"20","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Categories\\Categories.jsx":"21","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Home\\sections\\Offers.jsx":"22","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Home\\sections\\DreamCube.jsx":"23","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Home\\sections\\ItemList.jsx":"24","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Footer\\Footer.jsx":"25","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Categories\\styles.js":"26","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Footer\\styles.js":"27","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Categories\\Pagination\\Pagination.jsx":"28","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Categories\\Pagination\\sections\\TablePaginationActions.jsx":"29","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Categories\\Pagination\\sections\\Items.jsx":"30","C:\\Users\\Admin\\Desktop\\shop\\src\\helpers\\intersectionObserver.js":"31","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\ProductDetails\\styles.js":"32","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\ProductDetails\\sections\\ImgGallery.jsx":"33","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\ProductDetails\\sections\\Related.jsx":"34","C:\\Users\\Admin\\Desktop\\shop\\src\\globalStyles.js":"35","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Navbar\\NavCart.jsx":"36","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\CartPage\\CartPage.jsx":"37","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\CartPage\\styles.js":"38","C:\\Users\\Admin\\Desktop\\shop\\src\\GlobalState\\GlobalStateProvider.js":"39","C:\\Users\\Admin\\Desktop\\shop\\src\\GlobalState\\useGlobalState.js":"40","C:\\Users\\Admin\\Desktop\\shop\\src\\GlobalState\\context.js":"41","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\CheckoutForm\\Checkout\\sections\\CheckoutCart.jsx":"42","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\CheckoutForm\\Checkout\\sections\\CheckoutAccordion.jsx":"43","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Blogs\\Blogs.jsx":"44","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Blogs\\content.js":"45","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Blog\\Blog.jsx":"46","C:\\Users\\Admin\\Desktop\\shop\\src\\helpers\\ScrollToTop.js":"47","C:\\Users\\Admin\\Desktop\\shop\\src\\utils\\Skeletons.jsx":"48","C:\\Users\\Admin\\Desktop\\shop\\src\\utils\\Skeletons2.jsx":"49","C:\\Users\\Admin\\Desktop\\shop\\src\\utils\\Skeletons3.jsx":"50","C:\\Users\\Admin\\Desktop\\shop\\src\\utils\\LazyImage.jsx":"51","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Categories\\Pagination\\sections\\Videos.jsx":"52"},{"size":403,"mtime":1608081293800,"results":"53","hashOfConfig":"54"},{"size":2075,"mtime":1608288405412,"results":"55","hashOfConfig":"54"},{"size":640,"mtime":1608122625882,"results":"56","hashOfConfig":"54"},{"size":5980,"mtime":1608293991327,"results":"57","hashOfConfig":"54"},{"size":2400,"mtime":1608269833886,"results":"58","hashOfConfig":"54"},{"size":3126,"mtime":1608265819360,"results":"59","hashOfConfig":"54"},{"size":4010,"mtime":1608126348628,"results":"60","hashOfConfig":"54"},{"size":5902,"mtime":1608171504663,"results":"61","hashOfConfig":"54"},{"size":1096,"mtime":1608095014894,"results":"62","hashOfConfig":"54"},{"size":6290,"mtime":1608131898076,"results":"63","hashOfConfig":"54"},{"size":4768,"mtime":1608126330520,"results":"64","hashOfConfig":"54"},{"size":514,"mtime":1607347755504,"results":"65","hashOfConfig":"54"},{"size":1059,"mtime":1607341889976,"results":"66","hashOfConfig":"54"},{"size":5996,"mtime":1608337519375,"results":"67","hashOfConfig":"54"},{"size":2423,"mtime":1608336805682,"results":"68","hashOfConfig":"54"},{"size":4854,"mtime":1608294580286,"results":"69","hashOfConfig":"54"},{"size":3553,"mtime":1608293672220,"results":"70","hashOfConfig":"54"},{"size":769,"mtime":1608338092669,"results":"71","hashOfConfig":"54"},{"size":1312,"mtime":1607586851924,"results":"72","hashOfConfig":"54"},{"size":3567,"mtime":1608300512389,"results":"73","hashOfConfig":"54"},{"size":4468,"mtime":1608336972973,"results":"74","hashOfConfig":"54"},{"size":2657,"mtime":1608336695748,"results":"75","hashOfConfig":"54"},{"size":2333,"mtime":1608089568187,"results":"76","hashOfConfig":"54"},{"size":2575,"mtime":1608336885447,"results":"77","hashOfConfig":"54"},{"size":4635,"mtime":1608337882963,"results":"78","hashOfConfig":"54"},{"size":1718,"mtime":1608273488977,"results":"79","hashOfConfig":"54"},{"size":502,"mtime":1608337858192,"results":"80","hashOfConfig":"54"},{"size":4278,"mtime":1608336294560,"results":"81","hashOfConfig":"54"},{"size":2394,"mtime":1607925524461,"results":"82","hashOfConfig":"54"},{"size":703,"mtime":1608299192372,"results":"83","hashOfConfig":"54"},{"size":329,"mtime":1607915892708,"results":"84","hashOfConfig":"54"},{"size":907,"mtime":1608210604359,"results":"85","hashOfConfig":"54"},{"size":1515,"mtime":1607997848746,"results":"86","hashOfConfig":"54"},{"size":2377,"mtime":1608177531546,"results":"87","hashOfConfig":"54"},{"size":776,"mtime":1608126314146,"results":"88","hashOfConfig":"54"},{"size":1158,"mtime":1608089322578,"results":"89","hashOfConfig":"54"},{"size":5689,"mtime":1608126382939,"results":"90","hashOfConfig":"54"},{"size":1780,"mtime":1608084735909,"results":"91","hashOfConfig":"54"},{"size":300,"mtime":1608081119622,"results":"92","hashOfConfig":"54"},{"size":505,"mtime":1608081720719,"results":"93","hashOfConfig":"54"},{"size":105,"mtime":1608080602027,"results":"94","hashOfConfig":"54"},{"size":1593,"mtime":1608091748509,"results":"95","hashOfConfig":"54"},{"size":1161,"mtime":1608092954795,"results":"96","hashOfConfig":"54"},{"size":1110,"mtime":1608123242396,"results":"97","hashOfConfig":"54"},{"size":9388,"mtime":1608125290954,"results":"98","hashOfConfig":"54"},{"size":2221,"mtime":1608126622537,"results":"99","hashOfConfig":"54"},{"size":350,"mtime":1608172610567,"results":"100","hashOfConfig":"54"},{"size":1512,"mtime":1608275717956,"results":"101","hashOfConfig":"54"},{"size":1062,"mtime":1608295670380,"results":"102","hashOfConfig":"54"},{"size":1561,"mtime":1608287137635,"results":"103","hashOfConfig":"54"},{"size":1029,"mtime":1608288137676,"results":"104","hashOfConfig":"54"},{"size":1037,"mtime":1608336038628,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"15w1nx4",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"108"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"108"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"108"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"108"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"108"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\shop\\src\\index.js",[],["221","222"],"C:\\Users\\Admin\\Desktop\\shop\\src\\App.js",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\index.js",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Navbar\\Navbar.jsx",["223"],"import React, { useContext } from \"react\";\r\nimport { AppBar, Grid, Container, Divider } from \"@material-ui/core\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport NavDrawer from \"./NavDrawer\";\r\nimport { AppContext } from \"../../lib/commerce\";\r\nimport logo from \"../../assets/logo.svg\";\r\nimport useStyles from \"./styles\";\r\nimport { reminders, icons } from \"./content\";\r\nimport NavVideo from \"./NavVideo\";\r\nimport NavCart from \"./NavCart\";\r\n\r\nconst Navbar = withRouter(({ totalItems, location }) => {\r\n  const classes = useStyles();\r\n  const value = useContext(AppContext);\r\n  let categories = value.categories;\r\n\r\n  console.log(categories);\r\n\r\n  const categoryOne = categories.slice(14, 20);\r\n  const categoryTwo = categories.slice(10, 14);\r\n  const categoryThree = categories.slice(0, 10);\r\n\r\n  // console.log(categoryOne);\r\n  // console.log(categoryTwo);\r\n\r\n  const socialIcons = icons.map((icon, i) => (\r\n    <Grid item key={i}>\r\n      {icon}\r\n    </Grid>\r\n  ));\r\n\r\n  const menus = [\r\n    {\r\n      name: \"JAPANESE BOXES\",\r\n      list: categoryOne,\r\n      url: [categoryOne.map((m) => m.slug)],\r\n    },\r\n    {\r\n      name: \"WESTERN BOXES\",\r\n      list: categoryTwo,\r\n      url: [categoryTwo.map((m) => m.slug)],\r\n    },\r\n    {\r\n      name: \"BY CRAFTSMAN\",\r\n      list: categoryThree,\r\n      url: [categoryThree.map((m) => m.slug)],\r\n    },\r\n  ];\r\n\r\n  // console.log(menus[0].list[0]);\r\n\r\n  // var names = data.map(d => d.Name);\r\n\r\n  const Menu = menus[0].list.map((m) => m.slug);\r\n  // console.log(Menu);\r\n\r\n  const showMenu = {\r\n    hover: {\r\n      backgroundColor: \"#fff\",\r\n    },\r\n  };\r\n\r\n  const stretchHr = {\r\n    initial: { width: \"0\" },\r\n    hover: {\r\n      display: \"block\",\r\n      width: \"100%\",\r\n      transition: { delay: 0.2, duration: 0.5, ease: \"easeOut\" },\r\n      border: \"1px solid #000\",\r\n    },\r\n  };\r\n\r\n  const showList = {\r\n    initial: {\r\n      y: -15,\r\n      visibility: \"hidden\",\r\n    },\r\n    hover: {\r\n      y: 5,\r\n      visibility: \"visible\",\r\n      transition: {\r\n        duration: 0.3,\r\n      },\r\n    },\r\n  };\r\n\r\n  const menuList = menus.map(({ name, list, url }, i) => (\r\n    <Grid item key={i}>\r\n      <motion.div\r\n        variants={showMenu}\r\n        whileHover=\"hover\"\r\n        initial=\"initial\"\r\n        transition={{ duration: 0.5 }}\r\n        className={classes.menu}\r\n      >\r\n        <Link style={{ color: \"inherit\" }} to={`/collections/${name},${url}`}>\r\n          {name}\r\n        </Link>\r\n        <motion.hr variants={stretchHr} transition={{ duration: 0.5 }} />\r\n        <motion.ul variants={showList} className={classes.menuListContainer}>\r\n          {list.map((listItem, l) => (\r\n            <motion.li key={l} className={classes.menuList}>\r\n              <Link to={`/collections/:categories/${listItem.slug}`}>\r\n                {listItem.name}\r\n              </Link>\r\n            </motion.li>\r\n          ))}\r\n        </motion.ul>\r\n      </motion.div>\r\n    </Grid>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      {location.pathname !== \"/checkout\" && (\r\n        <Grid>\r\n          <Carousel\r\n            indicators={false}\r\n            autoPlay\r\n            interval={6000}\r\n            animation=\"slide\"\r\n            timeout={700}\r\n            className={classes.carousel}\r\n          >\r\n            {reminders.map((item, i) => (\r\n              <div key={i}>\r\n                <span style={{ fontSize: \"0.85rem\" }}>{item.title} &nbsp;</span>\r\n                <span>{item.sub}</span>\r\n              </div>\r\n            ))}\r\n          </Carousel>\r\n          <AppBar\r\n            // initial={{ backgroundColor: \"#000\" }}\r\n            // animate={{ backgroundColor: \"transparent\" }}\r\n            // transition={{ duration: 2 }}\r\n            position=\"relative\"\r\n            className={classes.appBar}\r\n            style={{\r\n              color: location.pathname !== \"/\" && \"#000\",\r\n              height: location.pathname !== \"/\" && \"450px\",\r\n            }}\r\n          >\r\n            {location.pathname === \"/\" && (\r\n              <motion.div\r\n                initial={{ scale: 1.2, filter: \"brightness(0%)\" }}\r\n                animate={{ scale: 1, filter: \"brightness(100%)\" }}\r\n                transition={{ duration: 2 }}\r\n                className={classes.appBarBackground}\r\n              />\r\n            )}\r\n            <Container style={{ maxWidth: \"1500px\" }}>\r\n              <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                <NavDrawer menus={menus} />\r\n                <Grid item>\r\n                  <Grid container spacing={4}>\r\n                    {socialIcons}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Divider\r\n                style={{\r\n                  backgroundColor: \"gray\",\r\n                  marginBottom: \"1rem\",\r\n                }}\r\n              />\r\n              <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                <Grid item>\r\n                  <NavVideo />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link to=\"/\">\r\n                    <img src={logo} alt=\"Shopper\" className={classes.image} />\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <NavCart value={value} />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.menuContainer}\r\n              >\r\n                <Link to=\"/\" className={classes.menuLink}>\r\n                  HOME\r\n                </Link>\r\n                {menuList}\r\n                <Link to=\"/blogs\" className={classes.menuLink}>\r\n                  PARABLOGX\r\n                </Link>\r\n              </Grid>\r\n            </Container>\r\n          </AppBar>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\lib\\commerce.js",["224","225","226","227"],"import { createContext, useEffect, useState } from \"react\";\r\nimport Commerce from \"@chec/commerce.js\";\r\n\r\nexport const commerce = new Commerce(\r\n  process.env.REACT_APP_CHEC_PUBLIC_KEY,\r\n  true\r\n);\r\n\r\nexport const AppContext = createContext(null);\r\n\r\nexport const ContextWrapper = (props) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n  const [categoryProducts, setCategoryProducts] = useState([]);\r\n  const [cart, setCart] = useState({});\r\n  const [order, setOrder] = useState({});\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const fetchProducts = async () => {\r\n    const { data } = await commerce.products.list();\r\n\r\n    setProducts(data);\r\n  };\r\n\r\n  const fetchCategories = async () => {\r\n    const { data } = await commerce.categories.list();\r\n\r\n    setCategories(data);\r\n  };\r\n\r\n  // const fetchCategory = async () => {\r\n  //   setCategory(\r\n  //     await commerce.categories.retrieve(\"samsung\", {\r\n  //       type: \"slug\",\r\n  //     })\r\n  //   );\r\n  // };\r\n\r\n  // const fetchCategoryProducts = async () => {\r\n  //   const { data } = await commerce.products.list({\r\n  //     category_slug: \"samsung\",\r\n  //   });\r\n\r\n  //   setCategoryProducts(data);\r\n  // };\r\n\r\n  const fetchCart = async () => {\r\n    setCart(await commerce.cart.retrieve());\r\n  };\r\n\r\n  const handleAddToCart = async (productId, quantity) => {\r\n    const { cart } = await commerce.cart.add(productId, quantity);\r\n\r\n    setCart(cart);\r\n  };\r\n\r\n  const handleUpdateCartQty = async (productId, quantity) => {\r\n    const { cart } = await commerce.cart.update(productId, { quantity });\r\n\r\n    setCart(cart);\r\n  };\r\n\r\n  const handleRemoveFromCart = async (productId) => {\r\n    const { cart } = await commerce.cart.remove(productId);\r\n\r\n    setCart(cart);\r\n  };\r\n\r\n  const handleEmptyCart = async () => {\r\n    const { cart } = await commerce.cart.empty();\r\n\r\n    setCart(cart);\r\n  };\r\n  const refreshCart = async () => {\r\n    const newCart = await commerce.cart.refresh();\r\n\r\n    setCart(newCart);\r\n  };\r\n\r\n  const handleCaptureCheckout = async (checkoutTokenId, newOrder) => {\r\n    try {\r\n      const incomingOrder = await commerce.checkout.capture(\r\n        checkoutTokenId,\r\n        newOrder\r\n      );\r\n\r\n      setOrder(incomingOrder);\r\n      refreshCart();\r\n    } catch (error) {\r\n      setErrorMessage(error.data.error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n    fetchCategories();\r\n    // fetchCategory();\r\n    // fetchCategoryProducts();\r\n    fetchCart();\r\n  }, []);\r\n\r\n  // console.log(products);\r\n  // console.log(categories);\r\n  // console.log(category);\r\n  // console.log(categoryProducts);\r\n  // console.log(cart);\r\n\r\n  const value = {\r\n    products,\r\n    categories,\r\n    cart,\r\n    order,\r\n    errorMessage,\r\n    handleAddToCart,\r\n    handleUpdateCartQty,\r\n    handleEmptyCart,\r\n    handleRemoveFromCart,\r\n    handleCaptureCheckout,\r\n    refreshCart,\r\n  };\r\n\r\n  // console.log(cart);\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>{props.children}</AppContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Cart\\Cart.jsx",["228"],"import React, { useContext } from \"react\";\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport globalStyles from \"../../globalStyles\";\r\nimport { AppContext } from \"../../lib/commerce\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst Cart = ({ onClose }) => {\r\n  const value = useContext(AppContext);\r\n  const cart = value.cart;\r\n  const globalClasses = globalStyles();\r\n\r\n  console.log(cart);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    cartContainer: {\r\n      padding: \"1.5rem\",\r\n      height: \"100%\",\r\n      width: \"400px\",\r\n      transition: \"1s\",\r\n      [theme.breakpoints.down(\"sm\")]: { width: \"300px\" },\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const EmptyCart = () => (\r\n    <div>\r\n      {\" \"}\r\n      <Typography style={{ marginTop: \"1rem\" }} variant=\"subtitle1\">\r\n        Your cart is currently empty.\r\n      </Typography>\r\n    </div>\r\n  );\r\n\r\n  const FilledCart = () => (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        style={{\r\n          flex: 1,\r\n          overflowY: \"auto\",\r\n          flexWrap: \"nowrap\",\r\n        }}\r\n      >\r\n        {cart.line_items.map((item) => (\r\n          <Grid container key={item.id} style={{ paddingTop: \"1rem\" }}>\r\n            <Grid item xs={4}>\r\n              <img\r\n                src={item.media.source}\r\n                alt={item.name}\r\n                style={{ width: \"100%\" }}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              container\r\n              justify=\"flex-start\"\r\n              xs={8}\r\n              style={{ textAlign: \"left\", padding: \"0 1rem\" }}\r\n            >\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                {item.name}\r\n                <br /> {item.line_total.formatted_with_symbol}\r\n              </Typography>\r\n              <Grid container justify=\"center\" alignItems=\"center\">\r\n                <Button\r\n                  type=\"button\"\r\n                  size=\"small\"\r\n                  onClick={() =>\r\n                    value.handleUpdateCartQty(item.id, item.quantity - 1)\r\n                  }\r\n                >\r\n                  -\r\n                </Button>\r\n                <Typography>&nbsp;{item.quantity}&nbsp;</Typography>\r\n                <Button\r\n                  type=\"button\"\r\n                  size=\"small\"\r\n                  onClick={() =>\r\n                    value.handleUpdateCartQty(item.id, item.quantity + 1)\r\n                  }\r\n                >\r\n                  +\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Divider style={{ width: \"100%\", marginTop: \"1rem\" }} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      <Grid container direction=\"column\">\r\n        <Grid container justify=\"space-between\">\r\n          <Typography variant=\"subtitle1\">Subtotal</Typography>\r\n          <Typography variant=\"subtitle1\">\r\n            {cart.subtotal.formatted_with_symbol}\r\n          </Typography>\r\n        </Grid>\r\n        <Typography gutterBottom variant=\"subtitle2\">\r\n          Shipping, taxes, and discount codes calculated at checkout.\r\n        </Typography>\r\n        <Button\r\n          component={Link}\r\n          to=\"/checkout\"\r\n          className={globalClasses.button}\r\n          onClick={onClose}\r\n        >\r\n          Checkout\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n\r\n  if (!cart.line_items) return \"Loading...\";\r\n\r\n  return (\r\n    <Grid container direction=\"column\" className={classes.cartContainer}>\r\n      <Grid container justify=\"space-between\" style={{ marginBottom: \"2rem\" }}>\r\n        {\" \"}\r\n        <Typography variant=\"h4\">Cart</Typography>\r\n        <Button onClick={onClose}>\r\n          <CloseIcon />\r\n        </Button>\r\n      </Grid>\r\n      <Divider />\r\n      {!cart.line_items.length ? <EmptyCart /> : <FilledCart />}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["229"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  CircularProgress,\r\n  Divider,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport logo from \"../../../assets/logo.svg\";\r\nimport { commerce } from \"../../../lib/commerce\";\r\nimport useStyles from \"./styles\";\r\nimport AddressForm from \"../AddressForm\";\r\nimport PaymentForm from \"../PaymentForm\";\r\nimport { AppContext } from \"../../../lib/commerce\";\r\nimport CheckoutCart from \"./sections/CheckoutCart\";\r\nimport CheckoutAccordion from \"./sections/CheckoutAccordion.jsx\";\r\nimport globalStyles from \"../../../globalStyles\";\r\n\r\nconst steps = [\"Cart\", \"Shipping details\", \"Payment\", \"Confirmation\"];\r\n\r\nconst Checkout = () => {\r\n  const [activeStep, setActiveStep] = useState(1);\r\n  const [checkoutToken, setCheckoutToken] = useState(null);\r\n  const [shippingData, setShippingData] = useState({});\r\n  const [isFinished, setIsFinished] = useState(false);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const value = useContext(AppContext);\r\n  const cart = value.cart;\r\n  const order = value.order;\r\n  const error = value.errorMessage;\r\n  const globalClasses = globalStyles();\r\n\r\n  console.log(cart);\r\n\r\n  useEffect(() => {\r\n    const generateToken = async () => {\r\n      try {\r\n        const token = await commerce.checkout.generateToken(cart.id, {\r\n          type: \"cart\",\r\n        });\r\n        console.log(token);\r\n\r\n        setCheckoutToken(token);\r\n      } catch (error) {\r\n        history.push(\"/\");\r\n      }\r\n    };\r\n\r\n    generateToken();\r\n  }, [cart]);\r\n\r\n  const nextStep = () =>\r\n    setActiveStep((previousActiveStep) => previousActiveStep + 1);\r\n  const backStep = () =>\r\n    setActiveStep((previousActiveStep) => previousActiveStep - 1);\r\n\r\n  const next = (data) => {\r\n    setShippingData(data);\r\n\r\n    nextStep();\r\n  };\r\n\r\n  const timeout = () => {\r\n    setTimeout(() => {\r\n      setIsFinished(true);\r\n      value.refreshCart();\r\n    }, 300);\r\n  };\r\n\r\n  let Confirmation = () =>\r\n    order.customer ? (\r\n      <>\r\n        <div>\r\n          <Typography variant=\"h5\">\r\n            Thank you for your purchase, {order.customer.firstname}{\" \"}\r\n            {order.customer.lastname}\r\n          </Typography>\r\n          <Divider className={classes.divider} />\r\n          <Typography variant=\"subtitle2\">\r\n            Order ref: {order.customer_reference}\r\n          </Typography>\r\n          <br />\r\n          <Button\r\n            component={Link}\r\n            to=\"/\"\r\n            className={globalClasses.button}\r\n            type=\"button\"\r\n          >\r\n            Back to home\r\n          </Button>\r\n        </div>\r\n      </>\r\n    ) : isFinished ? (\r\n      <>\r\n        <div>\r\n          <Typography variant=\"h5\">Thank you for your purchase</Typography>\r\n          <Divider className={classes.divider} />\r\n          <br />\r\n          <Button\r\n            component={Link}\r\n            to=\"/\"\r\n            className={globalClasses.button}\r\n            type=\"button\"\r\n          >\r\n            Back to home\r\n          </Button>\r\n        </div>\r\n      </>\r\n    ) : (\r\n      <div className={classes.spinner}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n\r\n  if (error) {\r\n    <>\r\n      <Typography variant=\"h5\">Error: {error}</Typography>\r\n      <br />\r\n      <Button\r\n        component={Link}\r\n        to=\"/\"\r\n        className={globalClasses.button}\r\n        type=\"button\"\r\n      >\r\n        Back to home\r\n      </Button>\r\n    </>;\r\n  }\r\n\r\n  const Form = () =>\r\n    activeStep === 1 ? (\r\n      <AddressForm checkoutToken={checkoutToken} next={next} />\r\n    ) : (\r\n      <PaymentForm\r\n        checkoutToken={checkoutToken}\r\n        backStep={backStep}\r\n        nextStep={nextStep}\r\n        timeout={timeout}\r\n        shippingData={shippingData}\r\n      />\r\n    );\r\n\r\n  const subtotal = cart && cart.subtotal && cart.subtotal.formatted_with_symbol;\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      style={{ maxWidth: \"1300px\", margin: \"auto\", minHeight: \"100vh\" }}\r\n    >\r\n      <Grid\r\n        item\r\n        md={activeStep !== 3 ? 7 : 12}\r\n        xs={12}\r\n        alignItems=\"center\"\r\n        container\r\n        direction=\"column\"\r\n        className={classes.info}\r\n      >\r\n        <Link to=\"/\">\r\n          <img\r\n            src={logo}\r\n            alt=\"Logo\"\r\n            style={{\r\n              width: \"150px\",\r\n              margin: \"auto\",\r\n              cursor: \"pointer !important\",\r\n            }}\r\n          />\r\n        </Link>\r\n        <CheckoutAccordion subtotal={subtotal} cart={cart} />\r\n        <Stepper activeStep={activeStep} className={classes.stepper}>\r\n          {steps.map((step) => (\r\n            <Step key={step}>\r\n              <StepLabel>{step}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n        {activeStep === 3 ? <Confirmation /> : checkoutToken && <Form />}\r\n      </Grid>\r\n      {/* <Divider orientation=\"vertical\" flexItem /> */}\r\n      {activeStep !== 3 && (\r\n        <Grid item md={5} className={classes.cart}>\r\n          <CheckoutCart subtotal={subtotal} cart={cart} />\r\n        </Grid>\r\n      )}\r\n\r\n      {/* <CssBaseline />\r\n      <div className={classes.toolbar} />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography variant=\"h4\" align=\"center\">\r\n            Checkout\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((step) => (\r\n              <Step key={step}>\r\n                <StepLabel>{step}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          {activeStep === steps.length ? (\r\n            <Confirmation />\r\n          ) : (\r\n            checkoutToken && <Form />\r\n          )}\r\n        </Paper>\r\n      </main> */}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\CheckoutForm\\AddressForm.jsx",["230","231","232","233","234"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { useForm, FormProvider } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\nimport { commerce } from \"../../lib/commerce\";\r\nimport globalStyles from \"../../globalStyles\";\r\nimport FormInput from \"./CustomTextField\";\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState(\"\");\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState(\"\");\r\n  const methods = useForm();\r\n  const globalClasses = globalStyles();\r\n\r\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({\r\n    id: code,\r\n    label: name,\r\n  }));\r\n\r\n  const subdivisions = Object.entries(shippingSubdivisions).map(\r\n    ([code, name]) => ({\r\n      id: code,\r\n      label: name,\r\n    })\r\n  );\r\n\r\n  const options = shippingOptions.map((sO) => ({\r\n    id: sO.id,\r\n    label: `${sO.description} - (${sO.price.formatted_with_symbol})`,\r\n  }));\r\n\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(\r\n      checkoutTokenId\r\n    );\r\n\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)[0]);\r\n  };\r\n\r\n  const fetchSubdivisions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(\r\n      countryCode\r\n    );\r\n\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  const fetchShippingOptions = async (\r\n    checkoutTokenId,\r\n    country,\r\n    stateProvince = null\r\n  ) => {\r\n    const options = await commerce.checkout.getShippingOptions(\r\n      checkoutTokenId,\r\n      { country, region: stateProvince }\r\n    );\r\n\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShippingCountries(checkoutToken.id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n  }, [shippingCountry]);\r\n\r\n  useEffect(() => {\r\n    if (shippingSubdivision)\r\n      fetchShippingOptions(\r\n        checkoutToken.id,\r\n        shippingCountry,\r\n        shippingSubdivision\r\n      );\r\n  }, [shippingSubdivision]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping Address{\" \"}\r\n      </Typography>\r\n      <FormProvider {...methods}>\r\n        <form\r\n          onSubmit={methods.handleSubmit((data) =>\r\n            next({\r\n              ...data,\r\n              shippingCountry,\r\n              shippingSubdivision,\r\n              shippingOption,\r\n            })\r\n          )}\r\n        >\r\n          <Grid container spacing={3}>\r\n            <FormInput name=\"firstName\" label=\"First name\" />\r\n            <FormInput name=\"lastName\" label=\"last name\" />\r\n            <FormInput name=\"address1\" label=\"Address\" />\r\n            <FormInput name=\"email\" label=\"Email\" />\r\n            <FormInput name=\"city\" label=\"City\" />\r\n            <FormInput name=\"zip\" label=\"ZIP / Postal code\" />\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select\r\n                value={shippingCountry}\r\n                fullWidth\r\n                onChange={(e) => setShippingCountry(e.target.value)}\r\n              >\r\n                {Object.entries(shippingCountries)\r\n                  .map(([code, name]) => ({ id: code, label: name }))\r\n                  .map((item) => (\r\n                    <MenuItem key={item.id} value={item.id}>\r\n                      {item.label}\r\n                    </MenuItem>\r\n                  ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select\r\n                value={shippingSubdivision}\r\n                fullWidth\r\n                onChange={(e) => setShippingSubdivision(e.target.value)}\r\n              >\r\n                {Object.entries(shippingSubdivisions)\r\n                  .map(([code, name]) => ({ id: code, label: name }))\r\n                  .map((item) => (\r\n                    <MenuItem key={item.id} value={item.id}>\r\n                      {item.label}\r\n                    </MenuItem>\r\n                  ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select\r\n                value={shippingOption}\r\n                fullWidth\r\n                onChange={(e) => setShippingOption(e.target.value)}\r\n              >\r\n                {shippingOptions\r\n                  .map((sO) => ({\r\n                    id: sO.id,\r\n                    label: `${sO.description} - (${sO.price.formatted_with_symbol})`,\r\n                  }))\r\n                  .map((item) => (\r\n                    <MenuItem key={item.id} value={item.id}>\r\n                      {item.label}\r\n                    </MenuItem>\r\n                  ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <Grid container justify=\"space-between\">\r\n            <Grid\r\n              component={Link}\r\n              to=\"/cart\"\r\n              container\r\n              alignItems=\"center\"\r\n              style={{ width: \"fit-content\" }}\r\n            >\r\n              <ArrowBackIosIcon fontSize=\"small\" />\r\n              <h4>Return to cart</h4>\r\n            </Grid>\r\n            <Button\r\n              className={globalClasses.button}\r\n              style={{\r\n                borderRadius: \"5px\",\r\n                width: \"fit-content\",\r\n              }}\r\n              type=\"submit\"\r\n            >\r\n              Continue to Payment\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\CheckoutForm\\PaymentForm.jsx",["235","236","237"],"import React, { useContext } from \"react\";\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Elements,\r\n  CardElement,\r\n  ElementsConsumer,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nimport test from \"../../assets/test.png\";\r\n\r\nimport { AppContext } from \"../../lib/commerce\";\r\nimport Review from \"./Review\";\r\nimport globalStyles from \"../../globalStyles\";\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\r\n\r\nconst PaymentForm = ({\r\n  checkoutToken,\r\n  nextStep,\r\n  backStep,\r\n  shippingData,\r\n  timeout,\r\n}) => {\r\n  const value = useContext(AppContext);\r\n  const globalClasses = globalStyles();\r\n\r\n  const handleSubmit = async (event, elements, stripe) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) return;\r\n\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: cardElement,\r\n    });\r\n\r\n    if (error) {\r\n      console.log(error);\r\n    } else {\r\n      const orderData = {\r\n        line_items: checkoutToken.live.line_items,\r\n        customer: {\r\n          firstname: shippingData.firstName,\r\n          lastname: shippingData.lastName,\r\n          email: shippingData.email,\r\n        },\r\n        shipping: {\r\n          name: \"Primary\",\r\n          street: shippingData.address1,\r\n          town_city: shippingData.city,\r\n          county_state: shippingData.shippingSubdivision,\r\n          postal_zip_code: shippingData.zip,\r\n          country: shippingData.shippingCountry,\r\n        },\r\n        fulfillment: { shipping_method: shippingData.shippingOption },\r\n        payment: {\r\n          gateway: \"stripe\",\r\n          stripe: {\r\n            payment_method_id: paymentMethod.id,\r\n          },\r\n        },\r\n      };\r\n\r\n      value.handleCaptureCheckout(checkoutToken.id, orderData);\r\n\r\n      timeout();\r\n\r\n      nextStep();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <Review checkoutToken={checkoutToken} />\r\n      <Divider />\r\n      <Typography variant=\"h6\" gutterBottom style={{ margin: \"20px 0\" }}>\r\n        Payment method\r\n      </Typography> */}\r\n      <Elements stripe={stripePromise}>\r\n        <ElementsConsumer>\r\n          {({ elements, stripe }) => (\r\n            <form\r\n              style={{ width: \"100%\" }}\r\n              onSubmit={(e) => handleSubmit(e, elements, stripe)}\r\n            >\r\n              <CardElement />\r\n              <br /> <br />\r\n              <Grid container justify=\"space-between\">\r\n                <Grid\r\n                  component={Button}\r\n                  onClick={backStep}\r\n                  container\r\n                  alignItems=\"center\"\r\n                  style={{ width: \"fit-content\" }}\r\n                >\r\n                  <ArrowBackIosIcon fontSize=\"small\" />\r\n                  <h5>Return to Shipping</h5>\r\n                </Grid>\r\n                <Button\r\n                  className={globalClasses.button}\r\n                  style={{\r\n                    borderRadius: \"5px\",\r\n                    width: \"fit-content\",\r\n                  }}\r\n                  type=\"submit\"\r\n                  disabled={!stripe}\r\n                >\r\n                  Pay now\r\n                </Button>\r\n              </Grid>\r\n              <Accordion style={{ marginTop: \"1rem\" }}>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  Click here for Testing\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <img\r\n                    src={test}\r\n                    alt=\"test payment\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              {/* <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <Button variant=\"outlined\" onClick={backStep}>\r\n                  Return to shipping\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  disabled={!stripe}\r\n                  color=\"primary\"\r\n                >\r\n                  Pay {checkoutToken.live.subtotal.formatted_with_symbol}\r\n                </Button>\r\n              </div> */}\r\n            </form>\r\n          )}\r\n        </ElementsConsumer>\r\n      </Elements>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\CheckoutForm\\Review.jsx",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\ProductDetails\\ProductDetails.jsx",["238","239","240"],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Home\\Home.jsx",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Home\\styles.js",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Navbar\\NavDrawer.jsx",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Navbar\\content.js",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Navbar\\NavVideo.jsx",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Category\\Category.jsx",["241"],"import { Divider, Grid, Typography } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { commerce } from \"../../lib/commerce\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Skeletons from \"../../utils/Skeletons\";\r\nimport LazyImage from \"../../utils/LazyImage\";\r\n\r\nconst Category = ({ match }) => {\r\n  const [categoryProducts, setCategoryProducts] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const slug = match.params.category;\r\n\r\n  const fetchCategory = async () => {\r\n    setCategory(\r\n      await commerce.categories.retrieve(slug, {\r\n        type: \"slug\",\r\n      })\r\n    );\r\n  };\r\n  const fetchCategoryProducts = async () => {\r\n    const { data } = await commerce.products.list({\r\n      category_slug: slug,\r\n    });\r\n\r\n    setCategoryProducts(data);\r\n    setloading(false);\r\n  };\r\n  useEffect(() => {\r\n    setloading(true);\r\n\r\n    fetchCategory();\r\n    fetchCategoryProducts();\r\n  }, []);\r\n\r\n  console.log(categoryProducts);\r\n  console.log(category);\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{\r\n          padding: \"3rem 2rem\",\r\n          maxWidth: \"1450px\",\r\n          margin: \"auto\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        {!loading ? (\r\n          <>\r\n            <Typography\r\n              variant=\"h4\"\r\n              style={{ marginBottom: \"3rem\", textTransform: \"uppercase\" }}\r\n            >\r\n              {category.name}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body1\"\r\n              style={{ marginBottom: \"3rem\", maxWidth: \"100ch\" }}\r\n            >\r\n              {category.description}\r\n            </Typography>\r\n\r\n            <Typography\r\n              variant=\"body1\"\r\n              gutterBottom\r\n              style={{ alignSelf: \"flex-start\" }}\r\n            >\r\n              {categoryProducts.length\r\n                ? categoryProducts.length + \" products\"\r\n                : \"Loading Products...\"}\r\n            </Typography>\r\n\r\n            <Grid container justify=\"center\" spacing={3}>\r\n              {categoryProducts &&\r\n                categoryProducts.map((product) => (\r\n                  <Grid\r\n                    item\r\n                    key={product.id}\r\n                    xs={12}\r\n                    sm={6}\r\n                    style={{ textAlign: \"center\", minheight: \"50vw\" }}\r\n                  >\r\n                    <Link to={`/collections/:categories/${slug}/${product.id}`}>\r\n                      <LazyImage\r\n                        src={product.media.source}\r\n                        alt={product.name}\r\n                      />\r\n                    </Link>\r\n                    <Typography variant=\"body1\">\r\n                      {\" \"}\r\n                      {product.name}&nbsp;|&nbsp;{product.categories[0].name}\r\n                    </Typography>\r\n                    {product.quantity === 0 ? (\r\n                      <Typography variant=\"body2\">Sold Out</Typography>\r\n                    ) : (\r\n                      <Typography variant=\"body2\">\r\n                        {product.price.formatted_with_symbol}\r\n                      </Typography>\r\n                    )}\r\n                  </Grid>\r\n                ))}\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <Skeletons fill={4} />\r\n        )}\r\n      </Grid>\r\n      <Divider style={{ width: \"100%\", marginBottom: \"4rem\" }} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Categories\\Categories.jsx",["242"],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Home\\sections\\Offers.jsx",["243"],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Home\\sections\\DreamCube.jsx",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Home\\sections\\ItemList.jsx",["244"],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Categories\\styles.js",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Footer\\styles.js",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Categories\\Pagination\\Pagination.jsx",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Categories\\Pagination\\sections\\TablePaginationActions.jsx",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Categories\\Pagination\\sections\\Items.jsx",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\helpers\\intersectionObserver.js",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\ProductDetails\\styles.js",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\ProductDetails\\sections\\ImgGallery.jsx",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\ProductDetails\\sections\\Related.jsx",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\globalStyles.js",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Navbar\\NavCart.jsx",["245"],"import { Badge, IconButton, Drawer } from \"@material-ui/core\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport React, { useContext } from \"react\";\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\n\r\nimport Cart from \"../Cart/Cart\";\r\nimport Context from \"../../GlobalState/context\";\r\n\r\nconst NavCart = ({ value }) => {\r\n  const { globalState, globalDispatch } = useContext(Context);\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        transitionDuration={300}\r\n        anchor=\"right\"\r\n        title=\"Menu\"\r\n        onClose={() => globalDispatch({ type: \"CLOSECART\" })}\r\n        open={globalState.isOpen}\r\n      >\r\n        <Cart onClose={() => globalDispatch({ type: \"CLOSECART\" })} />\r\n      </Drawer>\r\n\r\n      <IconButton\r\n        onClick={() => globalDispatch({ type: \"OPENCART\" })}\r\n        // component={Link}\r\n        // to=\"/cart\"\r\n        aria-label=\"Show cart items\"\r\n        color=\"inherit\"\r\n      >\r\n        <Badge badgeContent={value.cart.total_items} color=\"secondary\">\r\n          <ShoppingBasketIcon fontSize=\"large\" />\r\n        </Badge>\r\n      </IconButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavCart;\r\n","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\CartPage\\CartPage.jsx",["246"],"import { Button, Divider, Grid, Typography } from \"@material-ui/core\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { AppContext } from \"../../lib/commerce\";\r\nimport useStyles from \"./styles\";\r\nimport globalStyles from \"../../globalStyles\";\r\n\r\nconst CartPage = () => {\r\n  const classes = useStyles();\r\n  const globalClasses = globalStyles();\r\n  const value = useContext(AppContext);\r\n  const cart = value.cart;\r\n  const filled = cart && cart.line_items && cart.line_items.length;\r\n  //   const [quantity, setQuantity] = useState(cart.line_items.length);\r\n\r\n  console.log(cart);\r\n\r\n  const EmptyCart = () => <p> Your cart is currently empty.</p>;\r\n\r\n  const FilledCart = () => (\r\n    <Grid container direction=\"column\" className={classes.cartContainer}>\r\n      {cart.line_items.map((item) => (\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          container\r\n          key={item.id}\r\n          className={classes.cartItemContainer}\r\n        >\r\n          <Divider />\r\n          <Grid item xs={12} sm={7} container className={classes.itemDetail}>\r\n            <Grid item xs={6} sm={3}>\r\n              <img src={item.media.source} alt={item.name} />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              xs={6}\r\n              sm={9}\r\n            >\r\n              {item.name}\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={() => value.handleRemoveFromCart(item.id)}\r\n              >\r\n                Remove\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={5} container className={classes.itemPrice}>\r\n            <Grid\r\n              item\r\n              container\r\n              direction=\"column\"\r\n              xs={4}\r\n              className={classes.itemPriceDiv}\r\n            >\r\n              <Typography variant=\"body1\">Price</Typography>\r\n              <Typography variant=\"body1\">\r\n                {item.price.formatted_with_symbol}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              container\r\n              direction=\"column\"\r\n              xs={4}\r\n              className={classes.itemPriceDiv}\r\n            >\r\n              <Typography variant=\"body1\"> Quantity</Typography>\r\n              <Grid container alignItems=\"center\">\r\n                <Button\r\n                  type=\"button\"\r\n                  size=\"small\"\r\n                  onClick={() =>\r\n                    value.handleUpdateCartQty(item.id, item.quantity - 1)\r\n                  }\r\n                >\r\n                  -\r\n                </Button>\r\n                <Typography>&nbsp;{item.quantity}&nbsp;</Typography>\r\n                <Button\r\n                  type=\"button\"\r\n                  size=\"small\"\r\n                  onClick={() =>\r\n                    value.handleUpdateCartQty(item.id, item.quantity + 1)\r\n                  }\r\n                >\r\n                  +\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              container\r\n              direction=\"column\"\r\n              xs={4}\r\n              className={classes.itemPriceDiv}\r\n            >\r\n              <Typography variant=\"body1\">Total</Typography>\r\n              <Typography variant=\"body1\">\r\n                ₱{item.quantity * item.price.raw}.00\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n      <Divider />\r\n      <Grid item xs={12} container className={classes.checkoutContainer}>\r\n        <Grid item container direction=\"column\" xs={12} md={6}>\r\n          <Typography variant=\"subtitle2\" style={{ marginBottom: \"1rem\" }}>\r\n            {\" \"}\r\n            ORDER NOTE\r\n          </Typography>\r\n          <textarea rows=\"5\" />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          direction=\"column\"\r\n          alignItems=\"flex-end\"\r\n          xs={12}\r\n          md={6}\r\n          justify=\"space-between\"\r\n          className={classes.checkout}\r\n        >\r\n          <Grid item container justify=\"space-between\">\r\n            <Typography variant=\"subtitle2\">SUBTOTAL</Typography>\r\n            <Typography variant=\"body2\">\r\n              {cart.subtotal.formatted_with_symbol}\r\n            </Typography>\r\n          </Grid>\r\n          <Typography variant=\"body2\">\r\n            Shipping, taxes, and discount codes calculated at checkout.\r\n          </Typography>\r\n          <Grid item container justify=\"flex-end\" style={{ gap: \"1vw\" }}>\r\n            <Button variant=\"outlined\" onClick={value.handleEmptyCart}>\r\n              Empty Cart\r\n            </Button>\r\n            <Button\r\n              component={Link}\r\n              to=\"/checkout\"\r\n              className={globalClasses.button}\r\n              style={{ width: \"fit-content\" }}\r\n            >\r\n              Checkout\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className={classes.cart}\r\n    >\r\n      <Grid item xs={12} container alignItems=\"center\" direction=\"column\">\r\n        <Typography variant=\"h4\">Cart</Typography>\r\n        <Typography\r\n          component={Link}\r\n          to=\"/\"\r\n          variant=\"body1\"\r\n          className={classes.continueShopping}\r\n        >\r\n          Continue Shopping\r\n        </Typography>\r\n      </Grid>\r\n      {!filled ? <EmptyCart /> : <FilledCart />}\r\n      <Divider />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n","C:\\Users\\Admin\\Desktop\\shop\\src\\components\\CartPage\\styles.js",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\GlobalState\\GlobalStateProvider.js",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\GlobalState\\useGlobalState.js",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\GlobalState\\context.js",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\CheckoutForm\\Checkout\\sections\\CheckoutCart.jsx",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\CheckoutForm\\Checkout\\sections\\CheckoutAccordion.jsx",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Blogs\\Blogs.jsx",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Blogs\\content.js",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Blog\\Blog.jsx",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\helpers\\ScrollToTop.js",["247"],"import { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction ScrollToTop({ history }) {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","C:\\Users\\Admin\\Desktop\\shop\\src\\utils\\Skeletons.jsx",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\utils\\Skeletons2.jsx",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\utils\\Skeletons3.jsx",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\utils\\LazyImage.jsx",[],"C:\\Users\\Admin\\Desktop\\shop\\src\\components\\Categories\\Pagination\\sections\\Videos.jsx",[],{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","severity":1,"message":"253","line":57,"column":9,"nodeType":"254","messageId":"255","endLine":57,"endColumn":13},{"ruleId":"252","severity":1,"message":"256","line":14,"column":10,"nodeType":"254","messageId":"255","endLine":14,"endColumn":18},{"ruleId":"252","severity":1,"message":"257","line":14,"column":20,"nodeType":"254","messageId":"255","endLine":14,"endColumn":31},{"ruleId":"252","severity":1,"message":"258","line":15,"column":10,"nodeType":"254","messageId":"255","endLine":15,"endColumn":26},{"ruleId":"252","severity":1,"message":"259","line":15,"column":28,"nodeType":"254","messageId":"255","endLine":15,"endColumn":47},{"ruleId":"252","severity":1,"message":"260","line":14,"column":10,"nodeType":"254","messageId":"255","endLine":14,"endColumn":16},{"ruleId":"261","severity":1,"message":"262","line":56,"column":6,"nodeType":"263","endLine":56,"endColumn":12,"suggestions":"264"},{"ruleId":"252","severity":1,"message":"265","line":28,"column":9,"nodeType":"254","messageId":"255","endLine":28,"endColumn":18},{"ruleId":"252","severity":1,"message":"266","line":33,"column":9,"nodeType":"254","messageId":"255","endLine":33,"endColumn":21},{"ruleId":"252","severity":1,"message":"267","line":40,"column":9,"nodeType":"254","messageId":"255","endLine":40,"endColumn":16},{"ruleId":"261","severity":1,"message":"268","line":79,"column":6,"nodeType":"263","endLine":79,"endColumn":8,"suggestions":"269"},{"ruleId":"261","severity":1,"message":"270","line":92,"column":6,"nodeType":"263","endLine":92,"endColumn":27,"suggestions":"271"},{"ruleId":"252","severity":1,"message":"272","line":3,"column":3,"nodeType":"254","messageId":"255","endLine":3,"endColumn":13},{"ruleId":"252","severity":1,"message":"273","line":5,"column":3,"nodeType":"254","messageId":"255","endLine":5,"endColumn":10},{"ruleId":"252","severity":1,"message":"274","line":23,"column":8,"nodeType":"254","messageId":"255","endLine":23,"endColumn":14},{"ruleId":"252","severity":1,"message":"275","line":30,"column":9,"nodeType":"254","messageId":"255","endLine":30,"endColumn":13},{"ruleId":"261","severity":1,"message":"276","line":40,"column":6,"nodeType":"263","endLine":40,"endColumn":8,"suggestions":"277"},{"ruleId":"252","severity":1,"message":"278","line":71,"column":9,"nodeType":"254","messageId":"255","endLine":71,"endColumn":13},{"ruleId":"261","severity":1,"message":"279","line":35,"column":6,"nodeType":"263","endLine":35,"endColumn":8,"suggestions":"280"},{"ruleId":"261","severity":1,"message":"281","line":52,"column":6,"nodeType":"263","endLine":52,"endColumn":8,"suggestions":"282"},{"ruleId":"252","severity":1,"message":"283","line":2,"column":17,"nodeType":"254","messageId":"255","endLine":2,"endColumn":27},{"ruleId":"252","severity":1,"message":"284","line":5,"column":3,"nodeType":"254","messageId":"255","endLine":5,"endColumn":13},{"ruleId":"252","severity":1,"message":"285","line":2,"column":8,"nodeType":"254","messageId":"255","endLine":2,"endColumn":23},{"ruleId":"252","severity":1,"message":"286","line":2,"column":29,"nodeType":"254","messageId":"255","endLine":2,"endColumn":37},{"ruleId":"261","severity":1,"message":"262","line":12,"column":6,"nodeType":"263","endLine":12,"endColumn":8,"suggestions":"287"},"no-native-reassign",["288"],"no-negated-in-lhs",["289"],"no-unused-vars","'Menu' is assigned a value but never used.","Identifier","unusedVar","'category' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'categoryProducts' is assigned a value but never used.","'setCategoryProducts' is assigned a value but never used.","'motion' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["290"],"'countries' is assigned a value but never used.","'subdivisions' is assigned a value but never used.","'options' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["291"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["292"],"'Typography' is defined but never used.","'Divider' is defined but never used.","'Review' is defined but never used.","'href' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchProductDetails'. Either include it or remove the dependency array.",["293"],"'name' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchCategory' and 'fetchCategoryProducts'. Either include them or remove the dependency array.",["294"],"React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array.",["295"],"'useContext' is defined but never used.","'IconButton' is defined but never used.","'SwipeableDrawer' is defined but never used.","'useState' is defined but never used.",["296"],"no-global-assign","no-unsafe-negation",{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},"Update the dependencies array to be: [cart, history]",{"range":"311","text":"312"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"313","text":"314"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"315","text":"316"},"Update the dependencies array to be: [fetchProductDetails]",{"range":"317","text":"318"},"Update the dependencies array to be: [fetchCategory, fetchCategoryProducts]",{"range":"319","text":"320"},"Update the dependencies array to be: [fetchProducts]",{"range":"321","text":"322"},"Update the dependencies array to be: [history]",{"range":"323","text":"324"},[1650,1656],"[cart, history]",[2366,2368],"[checkoutToken.id]",[2662,2683],"[checkoutToken.id, shippingCountry, shippingSubdivision]",[1556,1558],"[fetchProductDetails]",[1005,1007],"[fetchCategory, fetchCategoryProducts]",[1413,1415],"[fetchProducts]",[280,282],"[history]"]